//////////////////////////////
// MIXINS: Mixins should have arguments. Otherwise use extendables...
//////////////////////////////

@mixin border-outline($type: border, $width: 1px, $style: solid, $color: #333, $offset: false) {

  @include border-outline-check($type, $width, $style, $color, $offset);

  @if $width == 'none' {
      #{$type}: $width;
  } @else if $width == false {

  } @else {
    #{$type}-width: $width;
    #{$type}-style: $style;
    #{$type}-color: $color;

     @if $type == 'outline' and $offset {
        #{$type}-offset: $offset;
     }

  }

}

@mixin border-outline-check($type, $width, $style, $color, $offset) {

  @if $type == 'border' and $offset {
    @warn "#{$type} does not use offset";
  }

  @if $type == 'outline' { // wish this was cleaner! there's probably a better way to do this.
    $widths: length($width);
    $styles: length($style);
    $colors: length($color);
    $offsets: length($offset);

    @if $widths > 1 or $styles > 1 or $colors > 1 or $offsets > 1   {
       @warn "You cannot use mulitple values for #{$type} - only the first value will be used!";
    }

  }  

}

@mixin margin-padding($type, $amount: false, $side: false) {
  @if $side {
    #{$type}-#{$side}: $amount;
  } @else {
    #{$type}: $amount;
  }
}

@mixin type-size($size, $leading: false) {
  font-size: $size;
  @if $leading { line-height: $leading; }
}

@mixin bold-italic-uppercase-variant($bold :default, $italic: false, $uppercase: false, $variant: false) {
  @if $bold { font-weight: bold; } @else { font-weight: normal; }
  @if $italic { font-style: italic; }
  @if $uppercase { text-transform: uppercase; }
  @if $variant { font-variant: small-caps; }
}

@mixin web-font-face($font-name, $font-file-name, $font-weight: normal, $font-style: normal, $inline-fonts: false) { 
  @if $inline-fonts and $font-name {
  @include font-face(
    $font-name, 
    inline-font-files(
      "#{$font-file-name}.woff", woff
    ), 
    false,  
    $font-weight, 
    $font-style
  );
  }
  @else if $font-name { 
    @include font-face(
      $font-name, 
      font-files(
        "#{$font-file-name}.woff", woff, 
        "#{$font-file-name}.ttf", truetype,
        "#{$font-file-name}.svg##{$font-name}", svg
      ), 
      "#{$font-file-name}.eot", 
      $font-weight, 
      $font-style
    );
  }
}

@mixin web-font-family($font-name: false) {
  @if $font-name { font-family: $font-name; }
}

@mixin generate-icons($icons, $pseudo: before, $prefix: '', $suffix: '', $extend: '') {
  @each $class, $unicode-character in $icons {
    #{$prefix}#{$class}#{$suffix}:#{$pseudo} {
      content: $unicode-character;
      @if ($extend != '') {
        @extend %#{$extend};
      } 
    }
  }
}
